# Makefile for comprehensive reverb test

# Compiler settings
CXX = clang++
CXXFLAGS = -std=c++17 -O2 -Wall -Wextra
TARGET = test_reverbs_comprehensive
SOURCE = test_reverbs_comprehensive.cpp

# JUCE settings - updated for macOS
JUCE_LIBRARY_CODE = ./JUCE_Plugin/JuceLibraryCode

# Include paths
INCLUDES = -I$(JUCE_LIBRARY_CODE) \
           -I./JUCE_Plugin \
           -I./JUCE_Plugin/Source

# JUCE preprocessor definitions
DEFINES = -DJUCER_XCODE_MAC_F6D2F4CF=1 \
          -DJUCE_APP_VERSION=1.0.0 \
          -DJUCE_APP_VERSION_HEX=0x10000 \
          -DJUCE_SHARED_CODE=1 \
          -DJUCE_STRICT_REFCOUNTEDPTR=1

# macOS specific settings
CXXFLAGS += -mmacosx-version-min=10.9
LDFLAGS = -framework Cocoa \
          -framework CoreAudio \
          -framework CoreMIDI \
          -framework IOKit \
          -framework Accelerate \
          -framework AudioToolbox \
          -framework AudioUnit \
          -framework CoreAudioKit \
          -framework QuartzCore

# Engine source files that need to be compiled
ENGINE_SOURCES = ./JUCE_Plugin/Source/EngineFactory.cpp \
                 ./JUCE_Plugin/Source/PlateReverb.cpp \
                 ./JUCE_Plugin/Source/SpringReverb.cpp \
                 ./JUCE_Plugin/Source/ConvolutionReverb.cpp \
                 ./JUCE_Plugin/Source/ShimmerReverb.cpp \
                 ./JUCE_Plugin/Source/GatedReverb.cpp

# JUCE library sources (minimal set for our test)
JUCE_SOURCES = $(JUCE_LIBRARY_CODE)/include_juce_core.cpp \
               $(JUCE_LIBRARY_CODE)/include_juce_audio_basics.cpp \
               $(JUCE_LIBRARY_CODE)/include_juce_audio_processors.cpp \
               $(JUCE_LIBRARY_CODE)/include_juce_dsp.cpp \
               $(JUCE_LIBRARY_CODE)/include_juce_events.cpp

# All object files
OBJS = $(SOURCE:.cpp=.o) \
       $(ENGINE_SOURCES:.cpp=.o) \
       $(JUCE_SOURCES:.cpp=.o)

# Default target
all: $(TARGET)

# Link the final executable
$(TARGET): $(OBJS)
	$(CXX) $(OBJS) $(LDFLAGS) -o $(TARGET)

# Compile our main test file
$(SOURCE:.cpp=.o): $(SOURCE)
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(DEFINES) -c $(SOURCE) -o $@

# Compile engine sources
./JUCE_Plugin/Source/%.o: ./JUCE_Plugin/Source/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

# Compile JUCE sources
$(JUCE_LIBRARY_CODE)/%.o: $(JUCE_LIBRARY_CODE)/%.cpp
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(DEFINES) -c $< -o $@

# Run the test
test: $(TARGET)
	./$(TARGET)

# Clean build files
clean:
	rm -f $(OBJS) $(TARGET)

# Force rebuild
rebuild: clean all

.PHONY: all test clean rebuild